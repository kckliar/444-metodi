1.
n=15;
for i=1:n
    for j=1:n
        a(i,j)=sin(i*j/(2*n));
    end
end

Pravo=[1;1;1;1;1;1;1;1;1;1;1;1;1;1;1];
seidel(a,Pravo,0)

b=a*Pravo;
X=a\b;

r=a*X-b;
err=norm(ans-Pravo)/norm(Pravo)
err_est=cond(a)*norm(r)/norm(b);

2. Сама функция
function [X, delta,n] = seidel(A, F, p) 
% Метод Зейделя (Гаусса-Зейделя)итерационного решения СЛАУ
% Входные параметры:
% A - симметричная положительно определенная матрица СЛАУ
% F - вектор правой части
% p - признак первого вызова функции в серии экспериментов 
%     (необходим для отображения результирующих
%      графиков при многократном вызове функции из одной программы
%      p=0 при первом вызове функции.
% Выходные параметры:
% X - вектор решения, delta - относительная норма приращения решения,
% n - число итераций. 
% Используется нулевое начальное приближение.
% Предельное допустимое число итераций равно 1000.
% Критерием окончания итерационного процесса является выполнение 
% условия delta <=epsilon, где epsilon - малое число.
% 
epsilon=input ('Введите критерий окончания процесса по норме поправки решения epsilon=');
N=length(F);  % размер вектора
X=zeros(N,1); % формирование нулевого вектора решения
 
n=0; % Счетчик итераций
 
disp('Ждите, идут вычисления')
ss=1; % признак итераций
ww=0; % признак вывода результата
 
while ss  
 n=n+1;
 if n>1000
  error('Число итераций >1000')
  ss=0; % аварийный конец итераций
  break
 end
 delta=0; % формирование нулевого максимального приращения решения 
 for j=1:N
  XK=X(j); % запоминание старого значения решения
  X(j)=(F(j)-A(j,[1:j-1,j+1:N])*X([1:j-1,j+1:N]))/A(j,j);
 
  if abs(X(j)-XK)>delta
     delta=abs(X(j)-XK); % формирование нормы поправки решения
  end
 end % конец цикла for
 if delta/norm(X,inf) <=epsilon;% выполнение критерия останова
                                % по относ. норме приращения
   ss=0; % конец итераций, решение получено
   ww=1; % признак вывода на экран
 end
 rr(n)=delta;
 k(n)=n;
end % конец цикла while 
X
delta
n
end
 
